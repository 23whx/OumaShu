---
// AdSense 广告位组件
export interface Props {
  slot?: string;
  format?: 'auto' | 'rectangle' | 'horizontal' | 'vertical';
  responsive?: boolean;
  className?: string;
  style?: string;
}

const { 
  slot = '',
  format = 'auto',
  responsive = true,
  className = '',
  style = '' 
} = Astro.props;

// 不同格式的默认样式
const formatStyles = {
  auto: 'display: block;',
  rectangle: 'display: inline-block; width: 300px; height: 250px;',
  horizontal: 'display: inline-block; width: 728px; height: 90px;',
  vertical: 'display: inline-block; width: 160px; height: 600px;'
};

const adStyle = style || formatStyles[format];
---

<!-- AdSense 广告容器 -->
<div class={`ad-container ${className}`} data-ad-format={format}>
  {slot && (
    <ins 
      class="adsbygoogle"
      style={adStyle}
      data-ad-client="ca-pub-XXXXXXXXXXXXXXXX"
      data-ad-slot={slot}
      data-ad-format={responsive ? 'auto' : format}
      data-full-width-responsive={responsive ? 'true' : 'false'}
    ></ins>
  )}
  
  {!slot && (
    <!-- 占位符，当没有提供 slot 时显示 -->
    <div class="ad-placeholder">
      <div class="ad-placeholder-content">
        <span class="ad-placeholder-icon">📢</span>
        <span class="ad-placeholder-text">Advertisement</span>
      </div>
    </div>
  )}
</div>

<style>
  .ad-container {
    position: relative;
    margin: 1.5rem 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 90px;
  }

  .ad-placeholder {
    width: 100%;
    min-height: 90px;
    background: linear-gradient(135deg, 
      color-mix(in srgb, var(--color-brand) 5%, transparent),
      color-mix(in srgb, var(--color-accent) 5%, transparent)
    );
    border: 2px dashed color-mix(in srgb, var(--color-border) 60%, transparent);
    border-radius: var(--radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-normal);
  }

  .ad-placeholder:hover {
    background: linear-gradient(135deg, 
      color-mix(in srgb, var(--color-brand) 8%, transparent),
      color-mix(in srgb, var(--color-accent) 8%, transparent)
    );
    border-color: color-mix(in srgb, var(--color-border) 80%, transparent);
  }

  .ad-placeholder-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-2);
    color: var(--color-muted);
  }

  .ad-placeholder-icon {
    font-size: 1.5rem;
    opacity: 0.7;
  }

  .ad-placeholder-text {
    font-size: 0.875rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    opacity: 0.8;
  }

  /* 响应式广告样式 */
  .ad-container[data-ad-format="auto"] .adsbygoogle {
    width: 100%;
    max-width: 100%;
  }

  /* 信息流广告样式 */
  .ad-container.ad-infeed {
    margin: 2rem 0;
    position: relative;
  }

  .ad-container.ad-infeed::before {
    content: 'Sponsored';
    position: absolute;
    top: -1.5rem;
    left: 0;
    font-size: 0.75rem;
    color: var(--color-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  /* 侧栏广告样式 */
  .ad-container.ad-sidebar {
    position: sticky;
    top: 2rem;
    margin: 0;
  }

  /* 避免内容布局偏移 (CLS) */
  .ad-container .adsbygoogle {
    min-height: inherit;
  }

  /* 打印时隐藏广告 */
  @media print {
    .ad-container {
      display: none !important;
    }
  }

  /* 减少动画偏好时的处理 */
  @media (prefers-reduced-motion: reduce) {
    .ad-placeholder {
      transition: none;
    }
  }
</style>

<!-- AdSense 脚本初始化 -->
<script>
  // 确保 AdSense 脚本加载后初始化广告
  function initializeAds() {
    if (typeof window !== 'undefined' && window.adsbygoogle) {
      const ads = document.querySelectorAll('.adsbygoogle');
      ads.forEach(ad => {
        if (!ad.hasAttribute('data-adsbygoogle-status')) {
          try {
            (window.adsbygoogle = window.adsbygoogle || []).push({});
          } catch (e) {
            console.warn('AdSense initialization failed:', e);
          }
        }
      });
    }
  }

  // 页面加载完成后初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeAds);
  } else {
    initializeAds();
  }

  // 动态内容加载后重新初始化
  document.addEventListener('astro:page-load', initializeAds);
</script>
